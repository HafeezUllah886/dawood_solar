<?php
 namespace App\Http\Controllers; use App\Http\Middleware\confirmPassword; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Routing\Controller; class TransferController extends Controller { public function __construct() { $this->middleware(confirmPassword::class)->only("\x65\x64\x69\x74"); } public function index(Request $request) { $start = $request->start ?? firstDayOfMonth(); $end = $request->end ?? now()->toDateString(); $transfers = transfer::whereBetween("\144\141\164\145", array($start, $end))->orderBy("\151\144", "\144\145\x73\143")->get(); $accounts = accounts::whereNotIn("\151\x64", array(2, 3))->get(); return view("\106\151\x6e\141\156\143\145\x2e\164\162\141\156\x73\x66\145\x72\56\x69\156\144\x65\x78", compact("\164\x72\141\x6e\x73\146\145\162\x73", "\x61\x63\143\157\165\156\164\163", "\163\164\141\x72\164", "\x65\156\x64")); } public function create() { } public function store(Request $request) { $request->validate(array("\164\x6f" => "\x64\151\146\146\x65\x72\145\x6e\x74\x3a\146\x72\x6f\155"), array("\164\x6f\x2e\x64\151\146\x66\145\162\x65\x6e\164" => "\x46\162\x6f\x6d\x20\141\x6e\144\40\x54\157\40\101\x63\143\x6f\165\156\x74\x73\40\x4d\x75\x73\x74\x20\142\145\x20\x64\x69\x66\x66\x65\x72\x65\x6e\164")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\146\162\x6f\155" => $request->from, "\x74\157" => $request->to, "\x64\x61\x74\x65" => $request->date, "\x61\x6d\x6f\x75\x6e\x74" => $request->amount, "\156\157\164\145\x73" => $request->notes, "\162\145\146\111\104" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\x54\x72\141\156\163\x66\x65\162\145\x64\x20\164\x6f\40{$toAccount}\40\74\x62\162\x3e\x20{$request->notes}", $ref, "\124\162\141\156\x73\146\145\162"); createTransaction($request->to, $request->date, $request->amount, 0, "\x54\x72\x61\156\x73\146\x65\x72\x65\144\40\x66\x72\157\155\x20{$fromAccount}\40\74\x62\x72\x3e\x20{$request->notes}", $ref, "\124\x72\x61\156\163\146\x65\x72"); DB::commit(); return back()->with("\163\165\143\x63\145\163\163", "\124\x72\x61\156\x73\146\145\162\x65\x64\40\x53\x75\143\143\145\x73\x73\146\165\154\x6c\x79"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\x72\162\x6f\x72", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { $accounts = accounts::whereNotIn("\151\144", array(2, 3))->get(); session()->forget("\x63\x6f\156\146\x69\162\155\x65\x64\137\x70\141\x73\163\x77\x6f\162\x64"); return view("\106\151\156\141\x6e\x63\x65\x2e\x74\x72\141\x6e\x73\146\x65\162\x2e\x65\x64\151\x74", compact("\164\162\141\156\163\146\145\162", "\x61\x63\x63\157\165\x6e\164\x73")); } public function update(Request $request, transfer $transfer) { $request->validate(array("\164\157" => "\144\151\146\x66\145\162\x65\156\x74\72\146\162\157\x6d"), array("\x74\157\56\x64\151\146\x66\x65\162\x65\156\164" => "\x46\x72\x6f\x6d\40\141\156\x64\x20\x54\157\x20\x41\x63\143\x6f\165\x6e\164\x73\40\x4d\165\163\164\x20\142\x65\40\144\151\146\146\145\162\x65\156\164")); try { DB::beginTransaction(); transactions::where("\162\x65\146\111\x44", $transfer->refID)->delete(); $transfer->update(array("\x66\162\x6f\x6d" => $request->from, "\x74\x6f" => $request->to, "\x64\141\x74\x65" => $request->date, "\x61\155\x6f\165\156\164" => $request->amount, "\156\x6f\x74\x65\163" => $request->notes)); $ref = $transfer->refID; $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\x54\162\x61\156\x73\x66\x65\162\x65\x64\40\164\x6f\40{$toAccount}\x20\x3c\x62\162\x3e\40{$request->notes}", $ref, "\124\x72\x61\x6e\x73\x66\x65\x72"); createTransaction($request->to, $request->date, $request->amount, 0, "\x54\x72\141\156\x73\146\x65\x72\x65\144\40\x66\x72\157\x6d\x20{$fromAccount}\x20\x3c\142\162\x3e\40{$request->notes}", $ref, "\124\162\x61\156\163\146\145\x72"); DB::commit(); session()->forget("\143\x6f\x6e\146\x69\162\155\145\x64\x5f\160\x61\x73\x73\x77\x6f\162\x64"); return to_route("\x74\x72\141\156\x73\146\145\x72\163\56\x69\156\144\145\x78")->with("\163\165\x63\143\x65\163\163", "\x54\162\x61\x6e\x73\x66\x65\162\x20\x55\x70\x64\141\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\x6e\x66\x69\162\x6d\x65\x64\x5f\x70\141\x73\x73\167\157\162\144"); return to_route("\x74\162\141\156\163\146\x65\162\x73\x2e\151\156\x64\145\170")->with("\x65\162\x72\157\162", $e->getMessage()); } } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\x72\x65\146\x49\x44", $ref)->delete(); transactions::where("\x72\x65\146\111\104", $ref)->delete(); DB::commit(); session()->forget("\x63\157\156\146\x69\162\x6d\145\144\x5f\x70\x61\163\x73\x77\x6f\x72\x64"); return redirect()->route("\164\162\141\x6e\163\146\x65\x72\x73\56\151\156\144\145\170")->with("\163\165\143\143\145\163\163", "\x54\162\141\x6e\x73\146\x65\162\40\x44\x65\154\x65\164\145\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\x6e\x66\151\162\x6d\145\144\x5f\x70\141\x73\x73\167\x6f\x72\144"); return redirect()->route("\x74\x72\141\x6e\163\x66\145\x72\x73\x2e\151\x6e\144\145\x78")->with("\145\162\162\x6f\x72", $e->getMessage()); } } }