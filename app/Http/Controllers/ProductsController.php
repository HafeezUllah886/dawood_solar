<?php
 namespace App\Http\Controllers; use App\Models\categories; use App\Models\products; use App\Models\units; use Illuminate\Http\Request; class ProductsController extends Controller { public function index() { $items = products::with("\143\x61\164\145\x67\157\162\x79", "\165\x6e\x69\x74")->paginate(1000); $cats = categories::orderBy("\156\141\x6d\145", "\141\x73\143")->get(); return view("\x70\x72\157\144\x75\x63\x74\x73\x2e\160\162\157\x64\x75\x63\164", compact("\151\x74\x65\155\163", "\143\141\164\163")); } public function create() { } public function store(Request $request) { $request->validate(array("\x63\157\x64\x65" => "\x75\x6e\x69\x71\165\145\x3a\x70\x72\157\x64\x75\x63\x74\163\x2c\143\157\144\x65"), array("\143\x6f\x64\x65\x2e\165\156\x69\161\x75\145" => "\x50\162\x6f\x64\x75\143\x74\40\x43\157\144\x65\x20\141\154\162\x65\141\144\171\40\111\x6e\40\x55\x73\145")); products::create($request->all()); return back()->with("\x73\x75\143\x63\x65\163\x73", "\120\162\157\144\x75\143\164\40\x43\x72\145\x61\164\145\x64"); } public function show(products $products) { } public function edit(products $products) { } public function update(Request $request, $id) { $request->validate(array("\x63\157\144\145" => "\x75\x6e\151\161\165\x65\x3a\160\x72\157\144\x75\x63\164\163\x2c\x63\157\144\145\54" . $id), array("\x63\157\x64\145\56\165\156\x69\161\x75\145" => "\120\x72\x6f\x64\x75\143\164\x20\x63\157\144\x65\x20\x61\154\x72\145\x61\144\171\40\x69\156\40\125\163\145")); $product = products::find($id); $product->update($request->all()); return back()->with("\163\x75\x63\143\x65\x73\x73", "\120\162\157\144\x75\x63\x74\x20\125\160\x64\x61\164\145\144"); } public function destroy(products $products) { } public function ajaxCreate(request $request) { $check = products::where("\156\x61\155\145", $request->name)->count(); if ($check > 0) { return response()->json(array("\x72\x65\163\x70\157\x6e\x73\x65" => "\x45\x78\x69\x73\x74\163")); } $product = products::create($request->all()); return response()->json(array("\162\145\163\x70\x6f\x6e\163\145" => $product->id)); } public function barcodePrint($id) { $product = products::find($id); return view("\x70\x72\157\x64\165\x63\x74\x73\56\142\x61\162\143\x6f\144\x65", compact("\x70\x72\x6f\144\165\x63\164")); } public function generateCode() { gen: $value = rand(1111111111, 9999999999); $check = products::where("\x63\x6f\144\x65", "\x43{$value}")->count(); if ($check > 0) { goto gen; } return "\x43{$value}"; } }