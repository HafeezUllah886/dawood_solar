<?php
 namespace App\Http\Controllers; use App\Models\scrapePurchase; use App\Http\Controllers\Controller; use App\Models\accounts; use App\Models\scrapStock; use App\Models\transactions; use Illuminate\Http\Request; class ScrapePurchaseController extends Controller { public function index() { $scrapePurchases = scrapePurchase::orderBy("\x69\x64", "\x64\x65\163\143")->get(); $accounts = accounts::business()->get(); return view("\163\143\x72\141\160\x65\x2e\x70\x75\162\143\150\141\x73\145\56\151\156\144\x65\170", compact("\x73\x63\162\x61\x70\145\120\165\x72\x63\150\x61\163\145\163", "\141\143\x63\157\x75\x6e\x74\163")); } public function create() { } public function store(Request $request) { $refID = getRef(); $request->merge(array("\x72\x65\146\x49\x44" => $refID)); $purchase = scrapePurchase::create($request->except("\x61\x63\x63\157\165\x6e\x74\111\x44")); scrapStock::create(array("\144\x61\x74\x65" => $request->date, "\x63\162" => $request->weight, "\162\x65\146\x49\104" => $refID, "\x6e\157\164\x65\163" => $request->notes)); if ($request->type == "\120\x61\171\155\x65\x6e\164") { createTransaction($request->accountID, $request->date, 0, $request->amount, "\120\x61\171\x6d\145\156\164\40\x6f\146\40\x53\143\x72\141\160\40\x50\165\x72\143\x68\x61\x73\x65", $refID, "\123\143\162\x61\160\40\120\165\162\x63\150\x61\x73\x65"); } return redirect()->route("\x73\143\162\x61\x70\x5f\x70\165\x72\143\x68\141\163\145\x2e\151\156\144\x65\x78")->with("\x73\165\x63\x63\145\x73\163", "\x53\143\162\x61\x70\40\120\x75\x72\x63\150\141\163\x65\40\103\x72\145\141\164\x65\x64"); } public function show(scrapePurchase $scrapePurchase) { } public function edit(scrapePurchase $scrapePurchase) { } public function update(Request $request, scrapePurchase $scrapePurchase) { } public function destroy($ref) { scrapePurchase::where("\x72\x65\x66\111\104", $ref)->delete(); scrapStock::where("\162\145\146\111\x44", $ref)->delete(); transactions::where("\x72\145\x66\x49\x44", $ref)->delete(); session()->forget("\x63\x6f\x6e\x66\151\162\x6d\145\x64\x5f\160\x61\x73\x73\x77\x6f\x72\144"); return redirect()->route("\x73\143\162\141\160\x5f\x70\165\162\143\150\x61\163\145\x2e\151\156\144\x65\170")->with("\163\165\x63\143\x65\x73\163", "\x53\143\x72\141\160\x20\120\165\x72\x63\150\x61\x73\x65\x20\104\x65\x6c\145\x74\x65\144"); } }