<?php
 namespace App\Http\Controllers; use App\Models\claim; use App\Http\Controllers\Controller; use App\Models\accounts; use App\Models\products; use App\Models\stock; use App\Models\warehouses; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class ClaimController extends Controller { public function index() { $claims = claim::with("\143\x75\x73\164\x6f\x6d\145\162", "\x76\x65\x6e\x64\x6f\162", "\160\162\157\x64\x75\143\164")->orderBy("\151\x64", "\x64\145\x73\143")->get(); $customers = accounts::customer()->get(); $vendors = accounts::vendor()->get(); $products = products::all(); $warehouses = warehouses::all(); return view("\x63\x6c\141\x69\x6d\163\x2e\x69\156\x64\x65\170", compact("\x63\154\x61\151\x6d\x73", "\x63\165\x73\x74\x6f\155\145\x72\163", "\166\145\x6e\144\157\162\163", "\x70\x72\x6f\x64\165\x63\164\163", "\167\141\x72\145\x68\157\165\x73\x65\x73")); } public function create() { } public function store(Request $request) { try { $refID = getRef(); $request->merge(array("\x72\x65\146\111\x44" => $refID)); claim::create($request->all()); createStock($request->productID, 0, $request->qty, $request->date, "\103\x6c\141\x69\155\40\x3a\x20{$request->notes}", $refID, $request->warehouseID); DB::commit(); return redirect()->route("\143\x6c\x61\x69\155\163\x2e\x69\156\x64\x65\x78")->with("\163\x75\143\143\145\x73\x73", "\x43\154\x61\x69\x6d\40\x52\145\143\145\x69\x76\x65\144\40\142\x79\x20\x43\165\x73\x74\157\x6d\145\x72"); } catch (\Exception $e) { DB::rollback(); return redirect()->route("\x63\154\x61\x69\155\163\x2e\x69\156\144\x65\x78")->with("\145\x72\162\157\162", $e->getMessage()); } } public function show(claim $claim) { } public function edit(claim $claim) { } public function update(Request $request, claim $claim) { } public function delete($ref) { try { claim::where("\x72\x65\146\x49\x44", $ref)->delete(); stock::where("\162\145\x66\x49\x44", $ref)->delete(); DB::commit(); session()->forget("\143\157\156\146\x69\162\x6d\145\144\137\160\x61\x73\163\167\157\x72\144"); return redirect()->route("\143\x6c\x61\151\155\163\56\151\x6e\x64\x65\x78")->with("\x73\165\x63\x63\x65\163\163", "\103\x6c\141\x69\x6d\40\122\x65\143\145\151\x76\x65\x64\40\x62\x79\40\103\165\163\164\x6f\x6d\x65\162"); } catch (\Exception $e) { DB::rollback(); session()->forget("\143\157\x6e\146\151\x72\x6d\145\144\137\x70\x61\x73\x73\167\157\x72\144"); return redirect()->route("\x63\154\x61\151\x6d\163\x2e\151\156\x64\145\x78")->with("\x65\162\x72\x6f\162", $e->getMessage()); } } public function status($status, $ref) { try { $claim = claim::where("\162\x65\x66\111\104", $ref)->first(); if ($status == "\122\x65\160\157\162\164\145\144\x20\164\157\40\126\145\x6e\x64\x6f\x72") { $claim->update(array("\x73\164\141\x74\x75\163" => "\x52\x65\160\x6f\162\164\x65\144\40\x74\x6f\40\x56\145\156\144\x6f\162")); } if ($status == "\122\145\x63\x65\x69\x76\x65\x64\x20\146\x72\x6f\x6d\x20\x56\x65\156\144\x6f\162") { $claim->update(array("\x73\164\x61\x74\165\163" => "\122\x65\x63\x65\x69\x76\145\144\x20\x66\x72\x6f\155\40\126\145\156\x64\157\162")); createStock($claim->productID, $claim->qty, 0, now(), "\x43\x6c\x61\x69\x6d\x3a\x20\122\x65\x63\145\x69\166\x65\x64\x20\146\162\x6f\x6d\x20\126\x65\156\144\x6f\x72", $claim->refID, $claim->warehouseID); } DB::commit(); return redirect()->route("\x63\154\x61\151\155\163\x2e\151\156\x64\145\x78")->with("\x73\165\x63\143\x65\163\x73", "\x43\154\x61\x69\155\40\x53\164\141\x74\165\163\40\x55\160\x64\141\164\145\144"); } catch (\Exception $e) { DB::rollback(); return redirect()->route("\143\154\141\151\155\x73\x2e\151\x6e\x64\145\170")->with("\145\162\162\157\x72", $e->getMessage()); } } }