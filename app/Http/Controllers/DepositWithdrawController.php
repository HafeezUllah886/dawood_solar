<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\deposit_withdraw; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class DepositWithdrawController extends Controller { public function index() { $trans = deposit_withdraw::orderBy("\x69\144", "\x64\145\163\x63")->get(); $accounts = accounts::orderby("\164\171\x70\x65", "\141\163\x63")->orderby("\164\151\x74\154\145", "\141\163\143")->get(); return view("\106\x69\x6e\141\x6e\143\145\x2e\x64\x65\160\x6f\163\151\164\137\167\x69\164\150\144\x72\141\x77\56\x69\156\x64\145\170", compact("\164\162\x61\x6e\x73", "\141\x63\143\x6f\165\x6e\164\x73")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); deposit_withdraw::create(array("\141\x63\143\x6f\x75\156\x74\111\x44" => $request->accountID, "\x64\141\x74\145" => $request->date, "\164\171\160\145" => $request->type, "\141\x6d\157\165\156\164" => $request->amount, "\156\157\164\x65\163" => $request->notes, "\x72\145\x66\x49\104" => $ref)); if ($request->type == "\104\x65\x70\x6f\x73\x69\164") { createTransaction($request->accountID, $request->date, $request->amount, 0, "\x44\145\x70\x6f\x73\x69\x74\x3a\40" . $request->notes, $ref, "\104\x65\x70\157\163\151\x74"); } else { createTransaction($request->accountID, $request->date, 0, $request->amount, "\x57\151\164\150\144\x72\141\x77\72\x20" . $request->notes, $ref, "\127\151\x74\150\x64\162\141\x77"); } DB::commit(); return back()->with("\163\x75\x63\x63\145\x73\x73", "\124\162\141\156\163\x61\x63\164\151\x6f\156\40\x43\162\x65\x61\164\x65\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\x72\x72\x6f\162", $e->getMessage()); } } public function show(deposit_withdraw $deposit_withdraw) { } public function edit(deposit_withdraw $deposit_withdraw) { } public function update(Request $request, deposit_withdraw $deposit_withdraw) { } public function delete($ref) { try { DB::beginTransaction(); deposit_withdraw::where("\x72\145\x66\111\104", $ref)->delete(); transactions::where("\x72\145\x66\111\x44", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\156\x66\x69\x72\x6d\145\144\137\x70\141\163\163\x77\157\x72\144"); return redirect()->route("\144\145\160\157\x73\x69\164\137\167\x69\x74\150\x64\x72\x61\167\56\x69\156\x64\x65\x78")->with("\x73\165\143\x63\145\x73\163", "\x54\162\x61\156\x73\141\x63\164\151\x6f\x6e\40\x44\x65\154\x65\164\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\156\x66\151\162\x6d\x65\x64\x5f\160\x61\163\163\167\x6f\x72\144"); return redirect()->route("\144\x65\160\157\163\151\164\x5f\x77\x69\164\x68\144\x72\x61\x77\x2e\151\x6e\x64\x65\170")->with("\145\x72\162\157\162", $e->getMessage()); } } }